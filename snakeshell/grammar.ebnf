start
    =
    sequential_list
    ;


sequential_list
    =
    sequence:or_list {';' sequence+:or_list}* [';']
    ;


or_list
    =
    sequence:and_list {'||' sequence+:and_list}*
    ;


and_list
    =
    sequence:expression {'&&' sequence+:expression}*
    ;


subshell
    =
    '(' subshell:start ')'
    ;


expression
    =
    | subshell
    | inverted
    | command
    ; 


inverted
    =
    '! ' ~ inverted:command
    ;


command
    =
    path:string args:{ string }*
    ;


string
    =
    | "'" @:/[^']*/ "'"
    | /[^\s'";()|&]+/
    ;
